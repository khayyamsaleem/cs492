#include <iostream>
#include <cstdlib>
#include <string>

#include "prodcons.h"

const char* usage(){
    return
        "Usage: ./prodcons p1 p2 p3 p4 p5 p6 p7\n"
        "p1: Number of producer threads\n"
        "p2: Number of consumer threads\n"
        "p3: Total number of products to be generated by all producer threads\n"
        "p4: Size of the queue to store products for both producer and consumer threads\n"
        "    (0 for unlimited queue size)\n"
        "p5: Type of scheduling algorithm (0 for FCFS, 1 for RR)\n"
        "p6: Value of quantum used for round-robin scheduling\n"
        "p7: Seed for randum number generator";
}

int main(int argc, char* argv[]){
    if (argc != 8){
        std::cerr << "Incorrect number of args" << std::endl;
        std::cout << usage() << std::endl;
        std::exit(1);
    }
    for (int i = 1; i < argc; ++i){
        if((i <= 4 || i >=6) && std::atoi(argv[i]) < 0){
            std::cerr << "Invalid Value " << argv[i] << " for p" << i << std::endl;
            std::exit(1);
        }
        if(i==5 && (std::atoi(argv[i]) != 0 && std::atoi(argv[i]) != 1)){
            std::cerr << "Invalid Value " << argv[i] << " for p5" << std::endl;
            std::exit(1);
        }
    }
    const int num_producers = std::atoi(argv[1]);
    const int num_consumers = std::atoi(argv[2]);
    const int num_products = std::atoi(argv[3]);
    const int queue_size = std::atoi(argv[4]);
    const int s_algo = std::atoi(argv[5]);
    const int quantum = std::atoi(argv[6]);
    const int seed = std::atoi(argv[7]);
    std::exit(0);
}
